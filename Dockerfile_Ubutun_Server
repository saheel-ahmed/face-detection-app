# Use an official Debian Buster slim image as a parent image
FROM debian:buster-slim

# Set the working directory to /app
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    libboost-all-dev \
    libopenblas-dev \
    liblapack-dev \
    libjpeg-dev \
    git \
    python3 \
    python3-pip

# Upgrade pip and setuptools
RUN pip3 install --upgrade pip setuptools

# Remove existing dlib directory if it exists
RUN rm -rf /app/dlib

# Clone the dlib repository
RUN git clone -b v19.21 --single-branch https://github.com/davisking/dlib.git

# Navigate to the build directory
WORKDIR /app/dlib/build

# Build and install dlib
RUN cmake .. && \
    cmake --build . && \
    make install && \
    cd .. && \
    python3 setup.py install

# Install Flask and scikit-image
RUN pip3 install --no-cache-dir Flask requests scikit-image

# Clean up unnecessary files
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin

# Make port 3223 available to the world outside this container
EXPOSE 3223

# Define environment variable
ENV NAME World

# Run app.py when the container launches
CMD ["python3", "/app/app.py"]
